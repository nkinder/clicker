[general]
name=krell_hts
description=Krell Home Theater Standard 7.1 Preamp
master_volume=true
mode=rs232

[rs232]
terminal=/dev/ttyUSB1
#baud=9600
#bytesize=8
#stopbits=1
#parity=none
#timeout=1

[buttons]
on=1PWRZ
off=0PWRZ
vol_up=UPZ
vol_down=DWNZ
mute=MUTZ
input_dvd=DVDZ
input_ld=LDZ
input_sat=SATZ
input_vcr=VCRZ
input_tv=TVZ
input_cd=CDZ
input_tuner=TUNZ
input_aux1=AU1Z
input_aux2=AU2Z
input_tape=TPZ

# Any status command must be defined in the [status_cmds] section. A
# status command is defined as a comma separated list of values.  The
# format of this list is as follows:
#
# <command>,<resp_sz>,<byte_filt>,<bit_filt>,<resp_type>
#
# command   - The command to send to the device
# resp_sz   - The size of the response in bytes
# byte_filt - The subscript (index) used to filter out the bytes of
#             interest. This can be a single byte from the array, or
#             slice notation can be used to grab multiple bytes. Note
#             that counting starts from 0, just as it does for array
#             elements.
# bit_filt  - A bitwise operation to further filter the bytes that
#             were filtered out by 'byte_filt'.  Typically, this will
#             be an & or ^ operation.  This is useful when you want
#             to see if a single bit is set, or if you want to get
#             a 4-bit integer.  If you don't need to further filter
#             the bytes, just use ^0 as the bit filter.  This setting
#             is ignored if the response type setting is not int.
# resp_type - The type to convert the response to.  This can be either
#             'str' or 'int'.  If 'str' is used, the response will be
#             interpreted as an ascii string.  If 'int' is used, the
#             response is assumed to be an integer that will be
#             converted to a numeric string.
#
# The portion of the response that is defined as the portion of
# interest is used to determine the return value to send to clients.
[status_cmds]
power=STAZ,18,1,&1,int
input=STAZ,18,3,&15,int
volume=STAZ,18,4,^0,int
mute=STAZ,18,1,&64,int

# The possible return values for a status command must be defined
# in a section named '[<command>_values], where '<command>' is the
# status command name use in the command definition.
#
# Each setting in this section should be named after a possible value
# that can be returned to clients.  The value of each setting is a
# regex that is compared against the portion of the response filtered
# out by the status command.  If a regex matches, the name of the
# associated config setting will be returned to the client. If no
# match is found for the response, an empty string will be returned to
# clients.
#
# If a status command has arbitraty return values that you simply want
# returned to the client, you don't need to define a values section for
# that command.  The portion of the response that is filtered by the
# command setting will be returned as the response.  This is useful for
# status commands that have arbitrary return values, such as the current
# volume level or the elapsed time for a DVD that is playing.
[power_values]
on=^1$
off=^0$|^$

[input_values]
dvd=^0$
ld=^1$
sat=^2$
vcr=^3$
tv=^4$
cd=^5$
tuner=^6$
aux1=^7$
aux2=^8$
tape=^9$

[mute_values]
on=^1$
off=^0$

